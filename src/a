profile compa



 
import './Profilecompany.css'; // Import your CSS file for styling
import Navbar from './Navbar';
import React, { useState, useEffect } from 'react';
function Profilecompany() {
    const [username, setUsername] = useState('username');
    const [firstName, setFirstName] = useState('Valerie');
    const [lastName, setLastName] = useState('Luna');
    const [orgName, setOrgName] = useState('Start Bootstrap');
    const [location, setLocation] = useState('San Francisco, CA');
    const [email, setEmail] = useState('name@example.com');
    const [phone, setPhone] = useState('555-123-4567');
    const [birthday, setBirthday] = useState('06/10/1988');
  const presation_text=localStorage.getItem('presentation_text');
    // Handle form submit (for demonstration, it currently does nothing)
    const [image, setImage] = useState(null);
    const [formData, setFormData] = useState({
        username: '',
        password: '',
        image: null,
        presentation_text: '',
        address: '',
        zip_code: '',
        city: '',
        country: '',
        email: '',
        phone: ''
      });
      const [imagePreview, setImagePreview] = useState(null);

    useEffect(() => {
        // Retrieve and set initial form data from localStorage
        const storedData = {
            username: localStorage.getItem('username') || '',
            password: localStorage.getItem('password') || '',
            presentation_text: localStorage.getItem('presentation_text') || '',
            address: localStorage.getItem('address') || '',
            zip_code: localStorage.getItem('zip_code') || '',
            city: localStorage.getItem('city') || '',
            country: localStorage.getItem('country') || '',
            email: localStorage.getItem('email') || '',
            phone: localStorage.getItem('phone') || ''
        };

        setFormData(storedData);

        const storedImagePath = localStorage.getItem('image_path');
        if (storedImagePath) {
            setImagePreview(storedImagePath);
        }
    }, []);
         const username1= localStorage.getItem('username');
       
          const presentation_text1=localStorage.getItem('presentation_text');
          const password1 = localStorage.getItem('password');
          const address1 = localStorage.getItem('address');
          const zip_code1 = localStorage.getItem('zip_code');
          const city1 = localStorage.getItem('city');
          const country1 = localStorage.getItem('country');
          const email1 = localStorage.getItem('email');
          const phone1 = localStorage.getItem('phone');
          const image_path1 = localStorage.getItem('image_path');
      const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
      };
    
      const handleImageChange = (e) => {
        setFormData({ ...formData, image: e.target.files[0] });
      };
      const id=localStorage.getItem('id');
      const handleSubmit = (e) => {
        e.preventDefault();
        const formDataToSend = new FormData();
        Object.keys(formData).forEach(key => formDataToSend.append(key, formData[key]));
        fetch(`http://localhost/update_company.php?id=${id}`, {
            method: 'POST',
            body: formDataToSend
          })
          .then(response => response.json())
          .then(data => {
            alert(data.message);
             const storedData = {
            username: localStorage.getItem('username') || '',
            password: localStorage.getItem('password') || '',
            presentation_text: localStorage.getItem('presentation_text') || '',
            address: localStorage.getItem('address') || '',
            zip_code: localStorage.getItem('zip_code') || '',
            city: localStorage.getItem('city') || '',
            country: localStorage.getItem('country') || '',
            email: localStorage.getItem('email') || '',
            phone: localStorage.getItem('phone') || ''
        };

        setFormData(storedData);
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to add employee');
          });
      };
    
  const handleImageChangee = (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setImage(reader.result); // Set image URL to state
      };
      reader.readAsDataURL(file);
    }
  };
  return (
    <div className="container-xl px-4 mt-4">
        <Navbar />
      {/* Account page navigation */}
      <nav className="nav nav-borders">
        <h2 className="nav-link active ms-0"  target="__blank" rel="noopener noreferrer">Profile</h2>
      
      </nav>
      <hr className="mt-0 mb-4" />
      <div className="row">
        <div className="col-xl-4">
          {/* Profile picture card */}
          <div className="card mb-4 mb-xl-0">
            <div className="card-header">Profile Picture</div>
            <div className="card-body text-center">
              {/* Profile picture image */}
              {image && (
        <div id="image-container">
          <img style={{width:'400px',height:'150px'}} className="img-account-profile rounded-circle mb-2" src={image} alt="Selected"   />
        </div>
      )}
              {/* Profile picture help block */}
              <div style={{color:'white'}}className="small font-italic text-muted mb-4">JPG or PNG no larger than 5 MB</div>
              {/* Profile picture upload button */}
        
            </div>
          </div>
        </div>
        <div   className="col-xl-8">
          {/* Account details card */}
          <div    className="card mb-4">
            <div    className="card-header">Account Details</div>
            <div  className="card-body">
              <form onSubmit={handleSubmit} style={{marginBottom:'100px',backgroundColor:'white',position:'absolute',left:'1140px',top:'880px',minHeight:'1500px'}} >
                {/* Form Group (username) */}
                <div className="mb-3">
                  <label className="small mb-1" htmlFor="inputUsername">Username (how your name will appear to other users on the site)</label>
                  <input className="input"
            type="text"
            name="username"
            value={username1}
            onChange={handleInputChange}
            placeholder="Username"
            style={{ width: '310px'  , backgroundColor: 'white'}}
          />
                </div>
                {/* Form Row */}
                <div className="row gx-3 mb-3">
                  {/* Form Group (first name) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputFirstName">First name</label>
                    <input
            type="password" className="input"
            name="password"
            value={formData.password}
            onChange={handleInputChange}
            placeholder="Password"
            style={{ width: '310px'  , backgroundColor: 'white'}}
          />
                  </div>
                  {/* Form Group (last name) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputLastName">Last name</label>
                    <input   className="input"
            type="file"
            name="image"
            onChange={handleImageChangee}
            required
          />
                  </div>
                </div>
                {/* Form Row */}
                <div className="row gx-3 mb-3">
                  {/* Form Group (organization name) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputOrgName">Organization name</label>
                    <textarea   className="textarea"
            name="presentation_text"
            value={formData.presentation_text}
            onChange={handleInputChange}
            placeholder="Presentation Text"
            style={{ height: '200px', width: '300px', padding: '10px' , backgroundColor: 'white' }}
          />
                  </div>
                  {/* Form Group (location) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputLocation">Location</label>
                    <input className="input"
            type="text"
            name="address"
              value={formData.address}
            onChange={handleInputChange}
            placeholder="Address"
            style={{ width: '310px' , backgroundColor: 'white' }}
          />
                  </div>
                </div>
                {/* Form Group (email address) */}
                <div className="mb-3">
                  <label className="small mb-1" htmlFor="inputEmailAddress">Email address</label>
                  <input className="input"
              type="text"
              name="zip_code"
              value={formData.zip_code}
              onChange={handleInputChange}
              placeholder="Zip Code"
              style={{ width: '310px' , backgroundColor: 'white' }}
            />
                </div>
                {/* Form Row */}
                <div className="row gx-3 mb-3">
                  {/* Form Group (phone number) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputPhone">Phone number</label>
                    <input className="input"
              type="text"
              name="city"
              value={formData.city}
              onChange={handleInputChange}
              placeholder="City"
              style={{ width: '310px'  , backgroundColor: 'white'}}
            />
                  </div>
                  {/* Form Group (birthday) */}
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputBirthday">Birthday</label>
                    <input className="input"
            type="text"
            name="country"
            value={formData.country}
            onChange={handleInputChange}
            placeholder="Country"
            style={{ width: '310px'  , backgroundColor: 'white'}}
          />
                  </div>

                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputBirthday">Birthday</label>
                    <input className="input"
            type="email"
            name="email"
            value={formData.email}
            onChange={handleInputChange}
            placeholder="Email"
            style={{ width: '310px' , backgroundColor: 'white' }}
          />
                  </div>
                  <div className="col-md-6">
                    <label className="small mb-1" htmlFor="inputBirthday">Birthday</label>
                    <input className="input"
            type="tel"
            name="phone"
            value={formData.phone}
            onChange={handleInputChange}
            placeholder="Phone"
            style={{ width: '310px' , backgroundColor: 'white' }}
          />
                  </div>
                </div>
                {/* Save changes button */}
                <button className="btn btn-primary" type="submit">Save changes</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Profilecompany;
